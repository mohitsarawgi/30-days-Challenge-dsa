#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int>*rev(LinkedListNode<int>*head){
    
    LinkedListNode<int>*curr = head;
    LinkedListNode<int>*prev = NULL;
    LinkedListNode<int>*forw = NULL;


    while(curr!=NULL){
        forw = curr->next;
        curr->next = prev;
        prev = curr;
        curr = forw;
        
    }
   
    head = prev;
    return head;
    
}

LinkedListNode<int>*middle(LinkedListNode<int>*head){

    if(head==NULL) return NULL;
    
    int count = 0;
    LinkedListNode<int>*mid = head;
    while(mid!=NULL){
        mid = mid->next;
        count++;
    }

    mid = head;
    int middlee = count/2;

    while(middlee){
        mid = mid->next;
        middlee--;
    }

    return mid;
}

bool isPalindrome(LinkedListNode<int> *head) {
  if (head == NULL || head->next == NULL){
        return true;
}

    LinkedListNode<int>*mid = middle(head);
    LinkedListNode<int>*h1 = rev(mid);
    LinkedListNode<int>*l1 = h1;
    LinkedListNode<int>*l2 = head;
    
    while(l1 != mid->next){
        if(l1->data != l2->data) return false;
            l1 = l1->next;
            l2 = l2->next;
        
    }
    
    return true;


}
