int getMaxWidth(TreeNode<int> *root)
{
    if(root==NULL) return 0;
    queue<pair<TreeNode<int>* , int>>q;
    int ans = 0;
    q.push({root , 0});

    while(!q.empty()){
        int size = q.size();
         ans = max(ans , size);
     
    //    int first , last;
        for(int i = 0;i<size;i++){
            int current_index = q.front().second;
            TreeNode<int>*node = q.front().first;
               q.pop();

            //    if(i==0) first =  current_index;
            //    if(i==size-1) last = current_index;

               if(node->left!=NULL) q.push({node->left , 2*current_index+1});
              if(node->right!=NULL) q.push({node->right , 2*current_index+2});
        }

        // ans = max(ans , last - first + 1);
    }
    return ans;
}
